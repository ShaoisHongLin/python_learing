# 用序列解包对多个变量进行赋值

'''
之前学的部分：系列解包赋值(常用于变量值交换)
示例如：
a, b, c = 3, 4, 5
可用于交换变量值。
a, b = 1, 2
a, b = b, a
# 这样就做到了类似C++要一个中间变量过渡的变量值对换功能。
'''

'''
实质上，在Python中，当你使用逗号分隔多个值时，它会被隐式地看作是一个元组。
前面讲解的序列解包赋值其实是利用了元组。
a, b, c = (3, 4, 5)
a, b = (1, 2)
'''

# 1.重新讲解'序列解包赋值',它可用于元组，列表，还有'字典'

# <1>右侧是元组：
a, b, c = (3, 4, 5)
#或者写成
(a,b,c)=(3,4,5)
# 利用元组将变量对换
a, b = (1, 2)

# <2>右侧是列表：
[d,e,f]=[3,4,5]

# <3>右侧是字典：默认只对键进行

# 1.右侧直接用字典：只将键传输给变量。
s={"name":"shao","age":18,"score":85}
e,f,g=s
print(e)
print(f)
print(g)

# 2.s.values()，只将值传输给变量。
s={"name":"shao","age":18,"score":85}
e,f,g=s.values()
print(e)
print(f)
print(g)

# 2.s.items()，将键、值、都传输给变量。
s={"name":"shao","age":18,"score":85}
e,f,g=s.items()
print(e)
#  print(e[0],e[1])就可以对变量的键0、值1访问
print(e[0],e[1])
print(f)
print(g)